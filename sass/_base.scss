// Like html selector, but with higher specificity. A place for declaration of
// CSS variables.
:root {
  // Custom CSS property is declared with two dashes
  // Called with var() function
  --color-primary: #eb2f64;
  --color-primary-light: #ff3366;
  --color-primary-dark: #ba265d;

  --color-grey-light-1: #faf9f9;
  --color-grey-light-2: #f4f2f2;
  --color-grey-light-3: #f0eeee;
  --color-grey-light-4: #ccc;

  --color-grey-dark-1: #333;
  --color-grey-dark-1-opaque: rgba(51, 51, 51, 0.5);
  --color-grey-dark-2: #777;
  --color-grey-dark-3: #999;

  --shadow-dark: 0 2rem 6rem rgba(0, 0, 0, 0.3);
  --shadow-light: 0 2rem 5rem rgba(0, 0, 0, 0.06);

  --line: 1px solid var(--color-grey-light-2);
}

// bp = Break Point; 75em = 1200px (from media query) / 16px (browser default)
// Here is 1200px because of 120rem for container's max-width (.container)
$bp-largest: 75em;
// 68.75 = 1100px (next breakpoint) / 16px
$bp-large: 68.75em;
// 900 / 16 = 56.25
$bp-medium: 56.25em;
// 600 / 16 = 37.5em
$bp-small: 37.5em;
// 500 / 16 = 31.5em
$bp-smallest: 31.5em;

* {
  margin: 0;
  padding: 0;
}

// All properties, including pseudoelements, will inherit border-box property from html
*,
::before,
::after {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  // 62.5% is because we need 1rem to be 10px;
  // Why 62.5? Because 10px/16px (browser default) = 62.5%
  font-size: 62.5%;

  // For smaller screens we will decrease global font size, so that's why this media query is in html selector
  @media only screen and (max-width: $bp-large) {
    // 1rem here will be 8px, 8/16 = 0.5, so that's why the font-size is 50%
    font-size: 50%;
  }
}

body {
  font-family: "Open Sans", sans-serif;
  font-weight: 400;
  line-height: 1.6;
  color: var(--color-grey-dark-2);
  background-image: linear-gradient(
    to right bottom,
    var(--color-primary-light),
    var(--color-primary-dark)
  );
  background-size: cover;
  background-repeat: no-repeat;
  min-height: 100vh;
}
